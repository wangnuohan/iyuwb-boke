(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{598:function(t,e,a){"use strict";a.r(e);var s=a(53),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"webpack-sources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-sources"}},[t._v("#")]),t._v(" webpack-sources")]),t._v(" "),a("p",[t._v("Contains multiple classes which represent a "),a("code",[t._v("Source")]),t._v(". A "),a("code",[t._v("Source")]),t._v(" can be asked for source code, size, source map and hash.")]),t._v(" "),a("h2",{attrs:{id:"source"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#source"}},[t._v("#")]),t._v(" "),a("code",[t._v("Source")])]),t._v(" "),a("p",[t._v("Base class for all sources.")]),t._v(" "),a("h3",{attrs:{id:"public-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-methods"}},[t._v("#")]),t._v(" Public methods")]),t._v(" "),a("p",[t._v("All methods should be considered as expensive as they may need to do computations.")]),t._v(" "),a("h4",{attrs:{id:"source-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#source-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("source")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("Source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Buffer\n")])])]),a("p",[t._v("Returns the represented source code as string or Buffer (for binary Sources).")]),t._v(" "),a("h4",{attrs:{id:"buffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#buffer"}},[t._v("#")]),t._v(" "),a("code",[t._v("buffer")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("Source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("buffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Buffer\n")])])]),a("p",[t._v("Returns the represented source code as Buffer. Strings are converted to utf-8.")]),t._v(" "),a("h4",{attrs:{id:"size"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#size"}},[t._v("#")]),t._v(" "),a("code",[t._v("size")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("Source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Number\n")])])]),a("p",[t._v("Returns the size in bytes of the represented source code.")]),t._v(" "),a("h4",{attrs:{id:"map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" "),a("code",[t._v("map")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("Source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Object "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n")])])]),a("p",[t._v("Returns the SourceMap of the represented source code as JSON. May return "),a("code",[t._v("null")]),t._v(" if no SourceMap is available.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("options")]),t._v(" object can contain the following keys:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("columns: Boolean")]),t._v(" (default "),a("code",[t._v("true")]),t._v("): If set to false the implementation may omit mappings for columns.")])]),t._v(" "),a("h4",{attrs:{id:"sourceandmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sourceandmap"}},[t._v("#")]),t._v(" "),a("code",[t._v("sourceAndMap")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("Source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sourceAndMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tsource"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tmap"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Returns both, source code (like "),a("code",[t._v("Source.prototype.source()")]),t._v(" and SourceMap (like "),a("code",[t._v("Source.prototype.map()")]),t._v("). This method could have better performance than calling "),a("code",[t._v("source()")]),t._v(" and "),a("code",[t._v("map()")]),t._v(" separately.")]),t._v(" "),a("p",[t._v("See "),a("code",[t._v("map()")]),t._v(" for "),a("code",[t._v("options")]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"updatehash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updatehash"}},[t._v("#")]),t._v(" "),a("code",[t._v("updateHash")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("Source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hash"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\n")])])]),a("p",[t._v("Updates the provided "),a("code",[t._v("Hash")]),t._v(" object with the content of the represented source code. ("),a("code",[t._v("Hash")]),t._v(" is an object with an "),a("code",[t._v("update")]),t._v(" method, which is called with string values)")]),t._v(" "),a("h2",{attrs:{id:"rawsource"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rawsource"}},[t._v("#")]),t._v(" "),a("code",[t._v("RawSource")])]),t._v(" "),a("p",[t._v("Represents source code without SourceMap.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RawSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceCode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"originalsource"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#originalsource"}},[t._v("#")]),t._v(" "),a("code",[t._v("OriginalSource")])]),t._v(" "),a("p",[t._v("Represents source code, which is a copy of the original file.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OriginalSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tsourceCode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("sourceCode")]),t._v(": The source code.")]),t._v(" "),a("li",[a("code",[t._v("name")]),t._v(": The filename of the original source code.")])]),t._v(" "),a("p",[t._v("OriginalSource tries to create column mappings if requested, by splitting the source code at typical statement borders ("),a("code",[t._v(";")]),t._v(", "),a("code",[t._v("{")]),t._v(", "),a("code",[t._v("}")]),t._v(").")]),t._v(" "),a("h2",{attrs:{id:"sourcemapsource"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sourcemapsource"}},[t._v("#")]),t._v(" "),a("code",[t._v("SourceMapSource")])]),t._v(" "),a("p",[t._v("Represents source code with SourceMap, optionally having an additional SourceMap for the original source.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SourceMapSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tsourceCode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tsourceMap"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\toriginalSource"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tinnerSourceMap"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tremoveOriginalSource"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("sourceCode")]),t._v(": The source code.")]),t._v(" "),a("li",[a("code",[t._v("name")]),t._v(": The filename of the original source code.")]),t._v(" "),a("li",[a("code",[t._v("sourceMap")]),t._v(": The SourceMap for the source code.")]),t._v(" "),a("li",[a("code",[t._v("originalSource")]),t._v(": The source code of the original file. Can be omitted if the "),a("code",[t._v("sourceMap")]),t._v(" already contains the original source code.")]),t._v(" "),a("li",[a("code",[t._v("innerSourceMap")]),t._v(": The SourceMap for the "),a("code",[t._v("originalSource")]),t._v("/"),a("code",[t._v("name")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("removeOriginalSource")]),t._v(": Removes the source code for "),a("code",[t._v("name")]),t._v(" from the final map, keeping only the deeper mappings for that file.")])]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("SourceMapSource")]),t._v(' supports "identity" mappings for the '),a("code",[t._v("innerSourceMap")]),t._v(".\nWhen original source matches generated source for a mapping it's assumed to be mapped char by char allowing to keep finer mappings from "),a("code",[t._v("sourceMap")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"cachedsource"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cachedsource"}},[t._v("#")]),t._v(" "),a("code",[t._v("CachedSource")])]),t._v(" "),a("p",[t._v("Decorates a "),a("code",[t._v("Source")]),t._v(" and caches returned results of "),a("code",[t._v("map")]),t._v(", "),a("code",[t._v("source")]),t._v(", "),a("code",[t._v("buffer")]),t._v(", "),a("code",[t._v("size")]),t._v(" and "),a("code",[t._v("sourceAndMap")]),t._v(" in memory. "),a("code",[t._v("updateHash")]),t._v(" is not cached.\nIt tries to reused cached results from other methods to avoid calculations, i. e. when "),a("code",[t._v("source")]),t._v(" is already cached, calling "),a("code",[t._v("size")]),t._v(" will get the size from the cached source, calling "),a("code",[t._v("sourceAndMap")]),t._v(" will only call "),a("code",[t._v("map")]),t._v(" on the wrapped Source.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CachedSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CachedSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Source "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" Source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cachedData"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CachedData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Instead of passing a "),a("code",[t._v("Source")]),t._v(" object directly one can pass an function that returns a "),a("code",[t._v("Source")]),t._v(" object. The function is only called when needed and once.")]),t._v(" "),a("h3",{attrs:{id:"public-methods-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-methods-2"}},[t._v("#")]),t._v(" Public methods")]),t._v(" "),a("h4",{attrs:{id:"getcacheddata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getcacheddata"}},[t._v("#")]),t._v(" "),a("code",[t._v("getCachedData()")])]),t._v(" "),a("p",[t._v("Returns the cached data for passing to the constructor. All cached entries are converted to Buffers and strings are avoided.")]),t._v(" "),a("h4",{attrs:{id:"original"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#original"}},[t._v("#")]),t._v(" "),a("code",[t._v("original()")])]),t._v(" "),a("p",[t._v("Returns the original "),a("code",[t._v("Source")]),t._v(" object.")]),t._v(" "),a("h4",{attrs:{id:"originallazy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#originallazy"}},[t._v("#")]),t._v(" "),a("code",[t._v("originalLazy()")])]),t._v(" "),a("p",[t._v("Returns the original "),a("code",[t._v("Source")]),t._v(" object or a function returning these.")]),t._v(" "),a("h2",{attrs:{id:"prefixsource"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prefixsource"}},[t._v("#")]),t._v(" "),a("code",[t._v("PrefixSource")])]),t._v(" "),a("p",[t._v("Prefix every line of the decorated "),a("code",[t._v("Source")]),t._v(" with a provided string.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrefixSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tprefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tsource"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Source "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Buffer\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"concatsource"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concatsource"}},[t._v("#")]),t._v(" "),a("code",[t._v("ConcatSource")])]),t._v(" "),a("p",[t._v("Concatenate multiple "),a("code",[t._v("Source")]),t._v("s or strings to a single source.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConcatSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("items"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Source "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" String\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"public-methods-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-methods-3"}},[t._v("#")]),t._v(" Public methods")]),t._v(" "),a("h4",{attrs:{id:"add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[t._v("#")]),t._v(" "),a("code",[t._v("add")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("ConcatSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Source "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Adds an item to the source.")]),t._v(" "),a("h2",{attrs:{id:"replacesource"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replacesource"}},[t._v("#")]),t._v(" "),a("code",[t._v("ReplaceSource")])]),t._v(" "),a("p",[t._v("Decorates a "),a("code",[t._v("Source")]),t._v(" with replacements and insertions of source code.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("ReplaceSource")]),t._v(' supports "identity" mappings for child source.\nWhen original source matches generated source for a mapping it\'s assumed to be mapped char by char allowing to split mappings at replacements/insertions.')]),t._v(" "),a("h3",{attrs:{id:"public-methods-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-methods-4"}},[t._v("#")]),t._v(" Public methods")]),t._v(" "),a("h4",{attrs:{id:"replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[t._v("#")]),t._v(" "),a("code",[t._v("replace")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("ReplaceSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tstart"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tend"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\treplacement"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Replaces chars from "),a("code",[t._v("start")]),t._v(" (0-indexed, inclusive) to "),a("code",[t._v("end")]),t._v(" (0-indexed, inclusive) with "),a("code",[t._v("replacement")]),t._v(".")]),t._v(" "),a("p",[t._v("Locations represents locations in the original source and are not influenced by other replacements or insertions.")]),t._v(" "),a("h4",{attrs:{id:"insert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#insert"}},[t._v("#")]),t._v(" "),a("code",[t._v("insert")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("ReplaceSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tpos"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tinsertion"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Inserts the "),a("code",[t._v("insertion")]),t._v(" before char "),a("code",[t._v("pos")]),t._v(" (0-indexed).")]),t._v(" "),a("p",[t._v("Location represents location in the original source and is not influenced by other replacements or insertions.")]),t._v(" "),a("h4",{attrs:{id:"original-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#original-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("original")])]),t._v(" "),a("p",[t._v("Get decorated "),a("code",[t._v("Source")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"compatsource"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compatsource"}},[t._v("#")]),t._v(" "),a("code",[t._v("CompatSource")])]),t._v(" "),a("p",[t._v("Converts a Source-like object into a real Source object.")]),t._v(" "),a("h3",{attrs:{id:"public-methods-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-methods-5"}},[t._v("#")]),t._v(" Public methods")]),t._v(" "),a("h4",{attrs:{id:"static-from"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static-from"}},[t._v("#")]),t._v(" static "),a("code",[t._v("from")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("CompatSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceLike"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("If "),a("code",[t._v("sourceLike")]),t._v(" is a real Source it returns it unmodified. Otherwise it returns it wrapped in a CompatSource.")])])}),[],!1,null,null,null);e.default=r.exports}}]);