(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{537:function(t,s,e){"use strict";e.r(s);var a=e(53),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"json-schema-traverse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#json-schema-traverse"}},[t._v("#")]),t._v(" json-schema-traverse")]),t._v(" "),e("p",[t._v("Traverse JSON Schema passing each schema object to callback")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://travis-ci.org/epoberezkin/json-schema-traverse",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://travis-ci.org/epoberezkin/json-schema-traverse.svg?branch=master",alt:"Build Status"}}),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://www.npmjs.com/package/json-schema-traverse",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://badge.fury.io/js/json-schema-traverse.svg",alt:"npm version"}}),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://coveralls.io/github/epoberezkin/json-schema-traverse?branch=master",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://coveralls.io/repos/github/epoberezkin/json-schema-traverse/badge.svg?branch=master",alt:"Coverage Status"}}),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"install"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install json-schema-traverse\n")])])]),e("h2",{attrs:{id:"usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" traverse "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'json-schema-traverse'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" schema "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  properties"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    foo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    bar"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'integer'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("schema"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("cb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cb is called 3 times with:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. root schema")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. {type: 'string'}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. {type: 'integer'}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Or:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("schema"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("cb"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("pre"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" post"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// pre is called 3 times with:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. root schema")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. {type: 'string'}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. {type: 'integer'}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// post is called 3 times with:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. {type: 'string'}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. {type: 'integer'}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. root schema")]),t._v("\n\n")])])]),e("p",[t._v("Callback function "),e("code",[t._v("cb")]),t._v(" is called for each schema object (not including draft-06 boolean schemas), including the root schema, in pre-order traversal. Schema references ($ref) are not resolved, they are passed as is.  Alternatively, you can pass a "),e("code",[t._v("{pre, post}")]),t._v(" object as "),e("code",[t._v("cb")]),t._v(", and then "),e("code",[t._v("pre")]),t._v(" will be called before traversing child elements, and "),e("code",[t._v("post")]),t._v(" will be called after all child elements have been traversed.")]),t._v(" "),e("p",[t._v("Callback is passed these parameters:")]),t._v(" "),e("ul",[e("li",[e("em",[t._v("schema")]),t._v(": the current schema object")]),t._v(" "),e("li",[e("em",[t._v("JSON pointer")]),t._v(": from the root schema to the current schema object")]),t._v(" "),e("li",[e("em",[t._v("root schema")]),t._v(": the schema passed to "),e("code",[t._v("traverse")]),t._v(" object")]),t._v(" "),e("li",[e("em",[t._v("parent JSON pointer")]),t._v(": from the root schema to the parent schema object (see below)")]),t._v(" "),e("li",[e("em",[t._v("parent keyword")]),t._v(": the keyword inside which this schema appears (e.g. "),e("code",[t._v("properties")]),t._v(", "),e("code",[t._v("anyOf")]),t._v(", etc.)")]),t._v(" "),e("li",[e("em",[t._v("parent schema")]),t._v(": not necessarily parent object/array; in the example above the parent schema for "),e("code",[t._v("{type: 'string'}")]),t._v(" is the root schema")]),t._v(" "),e("li",[e("em",[t._v("index/property")]),t._v(": index or property name in the array/object containing multiple schemas; in the example above for "),e("code",[t._v("{type: 'string'}")]),t._v(" the property name is "),e("code",[t._v("'foo'")])])]),t._v(" "),e("h2",{attrs:{id:"traverse-objects-in-all-unknown-keywords"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#traverse-objects-in-all-unknown-keywords"}},[t._v("#")]),t._v(" Traverse objects in all unknown keywords")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" traverse "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'json-schema-traverse'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" schema "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  mySchema"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    minimum"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    maximum"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("schema"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("allKeys"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cb is called 2 times with:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. root schema")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. mySchema")]),t._v("\n")])])]),e("p",[t._v("Without option "),e("code",[t._v("allKeys: true")]),t._v(" callback will be called only with root schema.")]),t._v(" "),e("h2",{attrs:{id:"license"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/epoberezkin/json-schema-traverse/blob/master/LICENSE",target:"_blank",rel:"noopener noreferrer"}},[t._v("MIT"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);