(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{469:function(t,n,s){"use strict";s.r(n);var e=s(53),a=Object(e.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"webassemblyjs-ast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webassemblyjs-ast"}},[t._v("#")]),t._v(" @webassemblyjs/ast")]),t._v(" "),s("blockquote",[s("p",[t._v("AST utils for webassemblyjs")])]),t._v(" "),s("h2",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" @webassemblyjs/ast\n")])])]),s("h2",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),s("h3",{attrs:{id:"traverse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#traverse"}},[t._v("#")]),t._v(" Traverse")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" traverse "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@webassemblyjs/ast"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Module")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"instruction-signatures"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#instruction-signatures"}},[t._v("#")]),t._v(" Instruction signatures")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" signatures "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@webassemblyjs/ast"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signatures"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"path-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#path-methods"}},[t._v("#")]),t._v(" Path methods")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("findParent: NodeLocator")])]),t._v(" "),s("li",[s("code",[t._v("replaceWith: Node => void")])]),t._v(" "),s("li",[s("code",[t._v("remove: () => void")])]),t._v(" "),s("li",[s("code",[t._v("insertBefore: Node => void")])]),t._v(" "),s("li",[s("code",[t._v("insertAfter: Node => void")])]),t._v(" "),s("li",[s("code",[t._v("stop: () => void")])])]),t._v(" "),s("h3",{attrs:{id:"ast-utils"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ast-utils"}},[t._v("#")]),t._v(" AST utils")]),t._v(" "),s("ul",[s("li",[t._v("function "),s("code",[t._v("module(id, fields, metadata)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("moduleMetadata(sections, functionNames, localNames)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("moduleNameMetadata(value)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("functionNameMetadata(value, index)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("localNameMetadata(value, localIndex, functionIndex)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("binaryModule(id, blob)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("quoteModule(id, string)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("sectionMetadata(section, startOffset, size, vectorOfSize)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("loopInstruction(label, resulttype, instr)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("instruction(id, args, namedArgs)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("objectInstruction(id, object, args, namedArgs)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("ifInstruction(testLabel, test, result, consequent, alternate)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("stringLiteral(value)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("numberLiteralFromRaw(value, raw)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("longNumberLiteral(value, raw)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("floatLiteral(value, nan, inf, raw)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("elem(table, offset, funcs)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("indexInFuncSection(index)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("valtypeLiteral(name)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("typeInstruction(id, functype)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("start(index)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("globalType(valtype, mutability)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("leadingComment(value)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("blockComment(value)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("data(memoryIndex, offset, init)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("global(globalType, init, name)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("table(elementType, limits, name, elements)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("memory(limits, id)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("funcImportDescr(id, signature)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("moduleImport(module, name, descr)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("moduleExportDescr(exportType, id)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("moduleExport(name, descr)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("limit(min, max)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("signature(params, results)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("program(body)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("identifier(value, raw)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("blockInstruction(label, instr, result)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("callInstruction(index, instrArgs)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("callIndirectInstruction(signature, intrs)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("byteArray(values)")])]),t._v(" "),s("li",[t._v("function "),s("code",[t._v("func(name, signature, body, isExternal, metadata)")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isModule")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isModuleMetadata")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isModuleNameMetadata")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isFunctionNameMetadata")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isLocalNameMetadata")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isBinaryModule")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isQuoteModule")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isSectionMetadata")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isLoopInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isObjectInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isIfInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isStringLiteral")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isNumberLiteral")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isLongNumberLiteral")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isFloatLiteral")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isElem")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isIndexInFuncSection")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isValtypeLiteral")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isTypeInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isStart")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isGlobalType")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isLeadingComment")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isBlockComment")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isData")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isGlobal")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isTable")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isMemory")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isFuncImportDescr")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isModuleImport")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isModuleExportDescr")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isModuleExport")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isLimit")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isSignature")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isProgram")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isIdentifier")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isBlockInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isCallInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isCallIndirectInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isByteArray")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("isFunc")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertModule")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertModuleMetadata")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertModuleNameMetadata")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertFunctionNameMetadata")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertLocalNameMetadata")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertBinaryModule")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertQuoteModule")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertSectionMetadata")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertLoopInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertObjectInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertIfInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertStringLiteral")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertNumberLiteral")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertLongNumberLiteral")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertFloatLiteral")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertElem")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertIndexInFuncSection")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertValtypeLiteral")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertTypeInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertStart")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertGlobalType")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertLeadingComment")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertBlockComment")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertData")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertGlobal")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertTable")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertMemory")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertFuncImportDescr")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertModuleImport")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertModuleExportDescr")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertModuleExport")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertLimit")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertSignature")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertProgram")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertIdentifier")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertBlockInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertCallInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertCallIndirectInstruction")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertByteArray")])]),t._v(" "),s("li",[t._v("Constant"),s("code",[t._v("assertFunc")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);